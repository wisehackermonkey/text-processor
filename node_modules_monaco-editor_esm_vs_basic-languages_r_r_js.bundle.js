/*! For license information please see node_modules_monaco-editor_esm_vs_basic-languages_r_r_js.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunktext_processor=self.webpackChunktext_processor||[]).push([["node_modules_monaco-editor_esm_vs_basic-languages_r_r_js"],{"./node_modules/monaco-editor/esm/vs/basic-languages/r/r.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"conf\": () => (/* binding */ conf),\n/* harmony export */   \"language\": () => (/* binding */ language)\n/* harmony export */ });\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar conf = {\n  comments: {\n    lineComment: '#'\n  },\n  brackets: [['{', '}'], ['[', ']'], ['(', ')']],\n  autoClosingPairs: [{\n    open: '{',\n    close: '}'\n  }, {\n    open: '[',\n    close: ']'\n  }, {\n    open: '(',\n    close: ')'\n  }, {\n    open: '\"',\n    close: '\"'\n  }],\n  surroundingPairs: [{\n    open: '{',\n    close: '}'\n  }, {\n    open: '[',\n    close: ']'\n  }, {\n    open: '(',\n    close: ')'\n  }, {\n    open: '\"',\n    close: '\"'\n  }]\n};\nvar language = {\n  defaultToken: '',\n  tokenPostfix: '.r',\n  roxygen: ['@alias', '@aliases', '@assignee', '@author', '@backref', '@callGraph', '@callGraphDepth', '@callGraphPrimitives', '@concept', '@describeIn', '@description', '@details', '@docType', '@encoding', '@evalNamespace', '@evalRd', '@example', '@examples', '@export', '@exportClass', '@exportMethod', '@exportPattern', '@family', '@field', '@formals', '@format', '@import', '@importClassesFrom', '@importFrom', '@importMethodsFrom', '@include', '@inherit', '@inheritDotParams', '@inheritParams', '@inheritSection', '@keywords', '@md', '@method', '@name', '@noMd', '@noRd', '@note', '@param', '@rawNamespace', '@rawRd', '@rdname', '@references', '@return', '@S3method', '@section', '@seealso', '@setClass', '@slot', '@source', '@template', '@templateVar', '@title', '@TODO', '@usage', '@useDynLib'],\n  constants: ['NULL', 'FALSE', 'TRUE', 'NA', 'Inf', 'NaN', 'NA_integer_', 'NA_real_', 'NA_complex_', 'NA_character_', 'T', 'F', 'LETTERS', 'letters', 'month.abb', 'month.name', 'pi', 'R.version.string'],\n  keywords: ['break', 'next', 'return', 'if', 'else', 'for', 'in', 'repeat', 'while', 'array', 'category', 'character', 'complex', 'double', 'function', 'integer', 'list', 'logical', 'matrix', 'numeric', 'vector', 'data.frame', 'factor', 'library', 'require', 'attach', 'detach', 'source'],\n  special: ['\\\\n', '\\\\r', '\\\\t', '\\\\b', '\\\\a', '\\\\f', '\\\\v', \"\\\\'\", '\\\\\"', '\\\\\\\\'],\n  brackets: [{\n    open: '{',\n    close: '}',\n    token: 'delimiter.curly'\n  }, {\n    open: '[',\n    close: ']',\n    token: 'delimiter.bracket'\n  }, {\n    open: '(',\n    close: ')',\n    token: 'delimiter.parenthesis'\n  }],\n  tokenizer: {\n    root: [{\n      include: '@numbers'\n    }, {\n      include: '@strings'\n    }, [/[{}\\[\\]()]/, '@brackets'], {\n      include: '@operators'\n    }, [/#'$/, 'comment.doc'], [/#'/, 'comment.doc', '@roxygen'], [/(^#.*$)/, 'comment'], [/\\s+/, 'white'], [/[,:;]/, 'delimiter'], [/@[a-zA-Z]\\w*/, 'tag'], [/[a-zA-Z]\\w*/, {\n      cases: {\n        '@keywords': 'keyword',\n        '@constants': 'constant',\n        '@default': 'identifier'\n      }\n    }]],\n    // Recognize Roxygen comments\n    roxygen: [[/@\\w+/, {\n      cases: {\n        '@roxygen': 'tag',\n        '@eos': {\n          token: 'comment.doc',\n          next: '@pop'\n        },\n        '@default': 'comment.doc'\n      }\n    }], [/\\s+/, {\n      cases: {\n        '@eos': {\n          token: 'comment.doc',\n          next: '@pop'\n        },\n        '@default': 'comment.doc'\n      }\n    }], [/.*/, {\n      token: 'comment.doc',\n      next: '@pop'\n    }]],\n    // Recognize positives, negatives, decimals, imaginaries, and scientific notation\n    numbers: [[/0[xX][0-9a-fA-F]+/, 'number.hex'], [/-?(\\d*\\.)?\\d+([eE][+\\-]?\\d+)?/, 'number']],\n    // Recognize operators\n    operators: [[/<{1,2}-/, 'operator'], [/->{1,2}/, 'operator'], [/%[^%\\s]+%/, 'operator'], [/\\*\\*/, 'operator'], [/%%/, 'operator'], [/&&/, 'operator'], [/\\|\\|/, 'operator'], [/<</, 'operator'], [/>>/, 'operator'], [/[-+=&|!<>^~*/:$]/, 'operator']],\n    // Recognize strings, including those broken across lines\n    strings: [[/'/, 'string.escape', '@stringBody'], [/\"/, 'string.escape', '@dblStringBody']],\n    stringBody: [[/\\\\./, {\n      cases: {\n        '@special': 'string',\n        '@default': 'error-token'\n      }\n    }], [/'/, 'string.escape', '@popall'], [/./, 'string']],\n    dblStringBody: [[/\\\\./, {\n      cases: {\n        '@special': 'string',\n        '@default': 'error-token'\n      }\n    }], [/\"/, 'string.escape', '@popall'], [/./, 'string']]\n  }\n};\n\n//# sourceURL=webpack://text-processor/./node_modules/monaco-editor/esm/vs/basic-languages/r/r.js?")}}]);