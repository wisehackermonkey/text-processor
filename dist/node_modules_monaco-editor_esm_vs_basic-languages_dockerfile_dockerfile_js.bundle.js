"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunktext_processor"] = self["webpackChunktext_processor"] || []).push([["node_modules_monaco-editor_esm_vs_basic-languages_dockerfile_dockerfile_js"],{

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/dockerfile/dockerfile.js":
/*!************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/dockerfile/dockerfile.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"conf\": () => (/* binding */ conf),\n/* harmony export */   \"language\": () => (/* binding */ language)\n/* harmony export */ });\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar conf = {\n  brackets: [['{', '}'], ['[', ']'], ['(', ')']],\n  autoClosingPairs: [{\n    open: '{',\n    close: '}'\n  }, {\n    open: '[',\n    close: ']'\n  }, {\n    open: '(',\n    close: ')'\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }],\n  surroundingPairs: [{\n    open: '{',\n    close: '}'\n  }, {\n    open: '[',\n    close: ']'\n  }, {\n    open: '(',\n    close: ')'\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }]\n};\nvar language = {\n  defaultToken: '',\n  tokenPostfix: '.dockerfile',\n  variable: /\\${?[\\w]+}?/,\n  tokenizer: {\n    root: [{\n      include: '@whitespace'\n    }, {\n      include: '@comment'\n    }, [/(ONBUILD)(\\s+)/, ['keyword', '']], [/(ENV)(\\s+)([\\w]+)/, ['keyword', '', {\n      token: 'variable',\n      next: '@arguments'\n    }]], [/(FROM|MAINTAINER|RUN|EXPOSE|ENV|ADD|ARG|VOLUME|LABEL|USER|WORKDIR|COPY|CMD|STOPSIGNAL|SHELL|HEALTHCHECK|ENTRYPOINT)/, {\n      token: 'keyword',\n      next: '@arguments'\n    }]],\n    arguments: [{\n      include: '@whitespace'\n    }, {\n      include: '@strings'\n    }, [/(@variable)/, {\n      cases: {\n        '@eos': {\n          token: 'variable',\n          next: '@popall'\n        },\n        '@default': 'variable'\n      }\n    }], [/\\\\/, {\n      cases: {\n        '@eos': '',\n        '@default': ''\n      }\n    }], [/./, {\n      cases: {\n        '@eos': {\n          token: '',\n          next: '@popall'\n        },\n        '@default': ''\n      }\n    }]],\n    // Deal with white space, including comments\n    whitespace: [[/\\s+/, {\n      cases: {\n        '@eos': {\n          token: '',\n          next: '@popall'\n        },\n        '@default': ''\n      }\n    }]],\n    comment: [[/(^#.*$)/, 'comment', '@popall']],\n    // Recognize strings, including those broken across lines with \\ (but not without)\n    strings: [[/\\\\'$/, '', '@popall'], [/\\\\'/, ''], [/'$/, 'string', '@popall'], [/'/, 'string', '@stringBody'], [/\"$/, 'string', '@popall'], [/\"/, 'string', '@dblStringBody']],\n    stringBody: [[/[^\\\\\\$']/, {\n      cases: {\n        '@eos': {\n          token: 'string',\n          next: '@popall'\n        },\n        '@default': 'string'\n      }\n    }], [/\\\\./, 'string.escape'], [/'$/, 'string', '@popall'], [/'/, 'string', '@pop'], [/(@variable)/, 'variable'], [/\\\\$/, 'string'], [/$/, 'string', '@popall']],\n    dblStringBody: [[/[^\\\\\\$\"]/, {\n      cases: {\n        '@eos': {\n          token: 'string',\n          next: '@popall'\n        },\n        '@default': 'string'\n      }\n    }], [/\\\\./, 'string.escape'], [/\"$/, 'string', '@popall'], [/\"/, 'string', '@pop'], [/(@variable)/, 'variable'], [/\\\\$/, 'string'], [/$/, 'string', '@popall']]\n  }\n};\n\n//# sourceURL=webpack://text-processor/./node_modules/monaco-editor/esm/vs/basic-languages/dockerfile/dockerfile.js?");

/***/ })

}]);