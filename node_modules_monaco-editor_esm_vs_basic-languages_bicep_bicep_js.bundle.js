/*! For license information please see node_modules_monaco-editor_esm_vs_basic-languages_bicep_bicep_js.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunktext_processor=self.webpackChunktext_processor||[]).push([["node_modules_monaco-editor_esm_vs_basic-languages_bicep_bicep_js"],{"./node_modules/monaco-editor/esm/vs/basic-languages/bicep/bicep.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"conf\": () => (/* binding */ conf),\n/* harmony export */   \"language\": () => (/* binding */ language)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nvar bounded = function (text) {\n  return \"\\\\b\" + text + \"\\\\b\";\n};\n\nvar identifierStart = '[_a-zA-Z]';\nvar identifierContinue = '[_a-zA-Z0-9]';\nvar identifier = bounded(\"\" + identifierStart + identifierContinue + \"*\");\nvar keywords = ['targetScope', 'resource', 'module', 'param', 'var', 'output', 'for', 'in', 'if', 'existing'];\nvar namedLiterals = ['true', 'false', 'null'];\nvar nonCommentWs = \"[ \\\\t\\\\r\\\\n]\";\nvar numericLiteral = \"[0-9]+\";\nvar conf = {\n  comments: {\n    lineComment: '//',\n    blockComment: ['/*', '*/']\n  },\n  brackets: [['{', '}'], ['[', ']'], ['(', ')']],\n  surroundingPairs: [{\n    open: '{',\n    close: '}'\n  }, {\n    open: '[',\n    close: ']'\n  }, {\n    open: '(',\n    close: ')'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }, {\n    open: \"'''\",\n    close: \"'''\"\n  }],\n  autoClosingPairs: [{\n    open: '{',\n    close: '}'\n  }, {\n    open: '[',\n    close: ']'\n  }, {\n    open: '(',\n    close: ')'\n  }, {\n    open: \"'\",\n    close: \"'\",\n    notIn: ['string', 'comment']\n  }, {\n    open: \"'''\",\n    close: \"'''\",\n    notIn: ['string', 'comment']\n  }],\n  autoCloseBefore: \":.,=}])' \\n\\t\",\n  indentationRules: {\n    increaseIndentPattern: new RegExp('^((?!\\\\/\\\\/).)*(\\\\{[^}\"\\'`]*|\\\\([^)\"\\'`]*|\\\\[[^\\\\]\"\\'`]*)$'),\n    decreaseIndentPattern: new RegExp('^((?!.*?\\\\/\\\\*).*\\\\*/)?\\\\s*[\\\\}\\\\]].*$')\n  }\n};\nvar language = {\n  defaultToken: '',\n  tokenPostfix: '.bicep',\n  brackets: [{\n    open: '{',\n    close: '}',\n    token: 'delimiter.curly'\n  }, {\n    open: '[',\n    close: ']',\n    token: 'delimiter.square'\n  }, {\n    open: '(',\n    close: ')',\n    token: 'delimiter.parenthesis'\n  }],\n  symbols: /[=><!~?:&|+\\-*/^%]+/,\n  keywords: keywords,\n  namedLiterals: namedLiterals,\n  escapes: \"\\\\\\\\(u{[0-9A-Fa-f]+}|n|r|t|\\\\\\\\|'|\\\\${)\",\n  tokenizer: {\n    root: [{\n      include: '@expression'\n    }, {\n      include: '@whitespace'\n    }],\n    stringVerbatim: [{\n      regex: \"(|'|'')[^']\",\n      action: {\n        token: 'string'\n      }\n    }, {\n      regex: \"'''\",\n      action: {\n        token: 'string.quote',\n        next: '@pop'\n      }\n    }],\n    stringLiteral: [{\n      regex: \"\\\\${\",\n      action: {\n        token: 'delimiter.bracket',\n        next: '@bracketCounting'\n      }\n    }, {\n      regex: \"[^\\\\\\\\'$]+\",\n      action: {\n        token: 'string'\n      }\n    }, {\n      regex: '@escapes',\n      action: {\n        token: 'string.escape'\n      }\n    }, {\n      regex: \"\\\\\\\\.\",\n      action: {\n        token: 'string.escape.invalid'\n      }\n    }, {\n      regex: \"'\",\n      action: {\n        token: 'string',\n        next: '@pop'\n      }\n    }],\n    bracketCounting: [{\n      regex: \"{\",\n      action: {\n        token: 'delimiter.bracket',\n        next: '@bracketCounting'\n      }\n    }, {\n      regex: \"}\",\n      action: {\n        token: 'delimiter.bracket',\n        next: '@pop'\n      }\n    }, {\n      include: 'expression'\n    }],\n    comment: [{\n      regex: \"[^\\\\*]+\",\n      action: {\n        token: 'comment'\n      }\n    }, {\n      regex: \"\\\\*\\\\/\",\n      action: {\n        token: 'comment',\n        next: '@pop'\n      }\n    }, {\n      regex: \"[\\\\/*]\",\n      action: {\n        token: 'comment'\n      }\n    }],\n    whitespace: [{\n      regex: nonCommentWs\n    }, {\n      regex: \"\\\\/\\\\*\",\n      action: {\n        token: 'comment',\n        next: '@comment'\n      }\n    }, {\n      regex: \"\\\\/\\\\/.*$\",\n      action: {\n        token: 'comment'\n      }\n    }],\n    expression: [{\n      regex: \"'''\",\n      action: {\n        token: 'string.quote',\n        next: '@stringVerbatim'\n      }\n    }, {\n      regex: \"'\",\n      action: {\n        token: 'string.quote',\n        next: '@stringLiteral'\n      }\n    }, {\n      regex: numericLiteral,\n      action: {\n        token: 'number'\n      }\n    }, {\n      regex: identifier,\n      action: {\n        cases: {\n          '@keywords': {\n            token: 'keyword'\n          },\n          '@namedLiterals': {\n            token: 'keyword'\n          },\n          '@default': {\n            token: 'identifier'\n          }\n        }\n      }\n    }]\n  }\n};\n\n//# sourceURL=webpack://text-processor/./node_modules/monaco-editor/esm/vs/basic-languages/bicep/bicep.js?")}}]);